version: 2.1

orbs:
  python: circleci/python@2.1.1
  docker: circleci/docker@1.4.0
  heroku: circleci/heroku@2.0.0


executors:
  my-machine:
    machine: true
    working_directory: /tmp/workspace

workflows:
  prod-commit-to-main-branch:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - main
      - deploy-docker:
          requires:
            - build-and-test

      - deploy-heroku:
          requires:
            - deploy-docker
          filters:
            branches:
              only:
                main


  dev-other-branches-compilation-and-tests:
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore:
                main


jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.9.13
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install Dependencies
          command: |
            pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Run tests with pytest
          command: pytest
      - run:
          name: Run linting with flake8 (PEP8)
          command: flake8
      - store_test_results:
          path: tests


  deploy-docker:
    machine: true
    steps:
      - checkout

      - run:
          name: Build docker image
          command:
            docker build -t $DOCKERHUB_LOGIN/oc-lettings:$CIRCLE_SHA1 .

      - run:
          name: Connect and push Docker Image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_LOGIN --password-stdin
            docker tag $DOCKERHUB_LOGIN/oc-lettings:$CIRCLE_SHA1 $DOCKERHUB_LOGIN/oc-lettings:lastest
            docker push $DOCKERHUB_LOGIN/oc-lettings:$CIRCLE_SHA1
            docker push $DOCKERHUB_LOGIN/oc-lettings:lastest

  deploy-heroku:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          - post-steps:
              - run :
                  name : set up data
                  command: python manage.py migrate
